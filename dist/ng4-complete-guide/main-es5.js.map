{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-interceptor.service.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/user.model.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/recipes/recipe-detail/recipe-detail.component.ts","webpack:///src/app/recipes/recipe-detail/recipe-detail.component.html","webpack:///src/app/recipes/recipe-edit/recipe-edit.component.ts","webpack:///src/app/recipes/recipe-edit/recipe-edit.component.html","webpack:///src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","webpack:///src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","webpack:///src/app/recipes/recipe-list/recipe-list.component.ts","webpack:///src/app/recipes/recipe-list/recipe-list.component.html","webpack:///src/app/recipes/recipe-start/recipe-start.component.ts","webpack:///src/app/recipes/recipe-start/recipe-start.component.html","webpack:///src/app/recipes/recipe.service.ts","webpack:///src/app/recipes/recipes-resolver.service.ts","webpack:///src/app/recipes/recipes.component.ts","webpack:///src/app/recipes/recipes.component.html","webpack:///src/app/shared/alert/alert.component.ts","webpack:///src/app/shared/alert/alert.component.html","webpack:///src/app/shared/data-storage.service.ts","webpack:///src/app/shared/dropdown.directive.ts","webpack:///src/app/shared/ingredient.model.ts","webpack:///src/app/shared/loading-spinner/loading-spinner.component.ts","webpack:///src/app/shopping-list/shopping-edit/shopping-edit.component.ts","webpack:///src/app/shopping-list/shopping-edit/shopping-edit.component.html","webpack:///src/app/shopping-list/shopping-list.component.ts","webpack:///src/app/shopping-list/shopping-list.component.html","webpack:///src/app/shopping-list/shoppinglist.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","redirectTo","pathMatch","component","canActivate","children","AppRoutingModule","forRoot","imports","AppComponent","authService","autoLogin","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthInterceptorService","next","user","pipe","handle","modifiedReq","clone","params","set","token","AuthComponent","router","isLoginMode","isLoading","error","form","valid","email","value","password","authObs","login","signUp","subscribe","resData","console","log","navigate","errorMessage","reset","AuthGuard","route","isAuth","createUrlTree","providedIn","AuthService","http","post","returnSecureToken","handleError","handleAuthentication","localId","idToken","expiresIn","userData","JSON","parse","localStorage","getItem","loadedUser","_token","Date","_tokenExpirationDate","expirationDuration","getTime","autoLogout","removeItem","tokenExpirationTimer","clearTimeout","setTimeout","logout","userId","expirationDate","setItem","stringify","errorRes","message","User","HeaderComponent","dataStorageService","isAuthenticated","userSub","storeRecipes","fetchRecipes","unsubscribe","RecipeDetailComponent","recipeService","recipe","getRecipe","addIngredientsToShoppingList","ingredients","relativeTo","deleteRecipe","onAddToShoppingList","onEditRecipe","onDeleteRecipe","RecipeEditComponent","editMode","initForm","updateRecipe","recipeForm","addRecipe","onCancel","get","push","name","required","amount","pattern","index","removeAt","recipeName","recipeImagePath","recipeDescription","recipeIngredients","imagePath","description","ingredient","controls","onSubmit","onAddIngredient","RecipeItemComponent","RecipeListComponent","subscription","recipesChanged","recipes","getRecipes","onNewRecipe","RecipeStartComponent","RecipeService","slService","slice","addIngredients","newRecipe","splice","RecipeResolverService","recipesService","state","length","RecipesComponent","AlertComponent","close","emit","onClose","DataStorageService","put","response","map","setRecipes","DropdownDirective","isOpen","Ingredient","LoadingSpinnerComponent","template","ShoppingEditComponent","startedEditing","editedItemIndex","editedItem","getIngredient","slForm","setValue","newIngredient","updateIngredient","addIngredient","deleteIngredient","onClear","ShoppingListComponent","getIngredients","ingredientsChanged","ShoppingListService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component';\nimport { RecipeStartComponent } from './recipes/recipe-start/recipe-start.component';\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component';\nimport { RecipeEditComponent } from './recipes/recipe-edit/recipe-edit.component';\nimport { RecipeResolverService } from './recipes/recipes-resolver.service';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/recipes', pathMatch: 'full' },\n  {\n    path: 'recipes',\n    component: RecipesComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: '', component: RecipeStartComponent },\n      { path: 'new', component: RecipeEditComponent },\n      {\n        path: ':id',\n        component: RecipeDetailComponent,\n        resolve: [RecipeResolverService],\n      },\n      {\n        path: ':id/edit',\n        component: RecipeEditComponent,\n        resolve: [RecipeResolverService],\n      },\n    ],\n  },\n  { path: 'shopping-list', component: ShoppingListComponent },\n  { path: 'auth', component: AuthComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  constructor(private authService: AuthService){}\n\n  ngOnInit(){\n    this.authService.autoLogin();\n  }\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component';\nimport { RecipeListComponent } from './recipes/recipe-list/recipe-list.component';\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component';\nimport { ShoppingEditComponent } from './shopping-list/shopping-edit/shopping-edit.component';\nimport { RecipeItemComponent } from './recipes/recipe-list/recipe-item/recipe-item.component';\nimport { DropdownDirective } from './shared/dropdown.directive';\nimport { ShoppingListService } from './shopping-list/shoppinglist.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RecipeStartComponent } from './recipes/recipe-start/recipe-start.component';\nimport { RecipeEditComponent } from './recipes/recipe-edit/recipe-edit.component';\nimport { RecipeService } from './recipes/recipe.service';\nimport { AuthComponent } from './auth/auth.component';\nimport { LoadingSpinnerComponent } from './shared/loading-spinner/loading-spinner.component';\nimport { AuthInterceptorService } from './auth/auth-interceptor.service';\nimport { AlertComponent } from './shared/alert/alert.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    RecipesComponent,\n    RecipeDetailComponent,\n    RecipeListComponent,\n    RecipeItemComponent,\n    ShoppingListComponent,\n    ShoppingEditComponent,\n    DropdownDirective,\n    RecipeStartComponent,\n    RecipeEditComponent,\n    AuthComponent,\n    LoadingSpinnerComponent,\n    AlertComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    ShoppingListService,\n    RecipeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpParams,\n} from '@angular/common/http';\nimport { take, exhaustMap } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptorService implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return this.authService.user.pipe(\n      take(1),\n      exhaustMap((user) => {\n        if (!user) {\n          return next.handle(req);\n        }\n        const modifiedReq = req.clone({\n          params: new HttpParams().set('auth', user.token),\n        });\n        return next.handle(modifiedReq);\n      })\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { AuthService, AuthResponseData } from './auth.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n})\nexport class AuthComponent {\n  isLoginMode = true;\n  isLoading = false;\n  error: string = null;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n\n    let authObs: Observable<AuthResponseData>\n\n    this.isLoading = true;\n    if (this.isLoginMode) {\n      authObs = this.authService.login(email, password)\n    } else {\n      authObs = this.authService.signUp(email, password)\n    }\n\n    authObs.subscribe(\n      (resData) => {\n        console.log(resData);\n        this.isLoading = false;\n        this.router.navigate(['/recipes']);\n      },\n      (errorMessage) => {\n        console.log(errorMessage);\n        this.error = errorMessage;\n        this.isLoading = false;\n      }\n    );\n\n    form.reset();\n  }\n\n  onHandleError(){\n    this.error = null;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n    <!-- <div class=\"alert alert-danger\" *ngIf=\"error\">\n      <p>{{ error }}</p>\n    </div> -->\n    <app-alert [message]=\"error\" *ngIf=\"error\" (close)=\"onHandleError()\"></app-alert>\n    <div *ngIf=\"isLoading\" style=\"text-align:center;\"> \n      <app-loading-spinner></app-loading-spinner>\n    </div>\n    <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\n      <div class=\"form-group\">\n        <label for=\"email\">E-Mail</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          class=\"form-control\"\n          ngModel\n          name=\"email\"\n          required\n          email\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          class=\"form-control\"\n          ngModel\n          name=\"password\"\n          required\n          minlength=\"6\"\n        />\n      </div>\n      <div>\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!authForm.valid\">\n          {{ isLoginMode ? \"Login\" : \"Sign Up\" }}\n        </button>\n        |\n        <button class=\"btn btn-primary\" (click)=\"onSwitchMode()\" type=\"button\">\n          Switch to {{ isLoginMode ? \"Sign Up\" : \"Login\" }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    router: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Promise<boolean | UrlTree>\n    | Observable<boolean | UrlTree> {\n    return this.authService.user.pipe(\n      take(1),\n      map((user) => {\n        const isAuth = !!user;\n        if (isAuth) {\n          return true;\n        }\n        return this.router.createUrlTree(['/auth']);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap } from 'rxjs/operators';\nimport { throwError, BehaviorSubject } from 'rxjs';\nimport { User } from './user.model';\nimport { Router } from '@angular/router';\n\nexport interface AuthResponseData {\n  kind: string;\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  registered?: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  user = new BehaviorSubject<User>(null);\n  private tokenExpirationTimer: any;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  signUp(email: string, password: string) {\n    return this.http\n      .post<AuthResponseData>(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBGGTbOnH_L5YJRx8g8eKGf-RXqsk-gHQA',\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }\n      )\n      .pipe(\n        catchError(this.handleError),\n        tap((resData) => {\n          this.handleAuthentication(\n            resData.email,\n            resData.localId,\n            resData.idToken,\n            +resData.expiresIn\n          );\n        })\n      );\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post<AuthResponseData>(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBGGTbOnH_L5YJRx8g8eKGf-RXqsk-gHQA',\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }\n      )\n      .pipe(\n        catchError(this.handleError),\n        tap((resData) => {\n          this.handleAuthentication(\n            resData.email,\n            resData.localId,\n            resData.idToken,\n            +resData.expiresIn\n          );\n        })\n      );\n  }\n\n  autoLogin() {\n    const userData: {\n      email: string;\n      id: string;\n      _token: string;\n      _tokenExpirationDate: string;\n    } = JSON.parse(localStorage.getItem('userData'));\n    if (!userData) {\n      return;\n    }\n    const loadedUser = new User(\n      userData.email,\n      userData.id,\n      userData._token,\n      new Date(userData._tokenExpirationDate)\n    );\n\n    if (loadedUser.token) {\n      this.user.next(loadedUser);\n      const expirationDuration = new Date(userData._tokenExpirationDate).getTime() - new Date().getTime();\n      this.autoLogout(expirationDuration);\n    }\n  }\n\n  logout() {\n    this.user.next(null);\n    this.router.navigate(['/auth']);\n    localStorage.removeItem('userData');\n    if(this.tokenExpirationTimer){\n      clearTimeout(this.tokenExpirationTimer);\n    }\n    this.tokenExpirationTimer = null;\n  }\n\n  autoLogout(expirationDuration: number) {\n    console.log(expirationDuration);\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.logout();\n    }, expirationDuration);\n  }\n\n  private handleAuthentication(\n    email: string,\n    userId: string,\n    token: string,\n    expiresIn: number\n  ) {\n    const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\n    const user = new User(email, userId, token, expirationDate);\n    this.user.next(user);\n    this.autoLogout(expiresIn * 1000);\n    localStorage.setItem('userData', JSON.stringify(user));\n  }\n\n  private handleError(errorRes: HttpErrorResponse) {\n    let errorMessage = 'An unknown error occured';\n    if (!errorRes.error || !errorRes.error.error) {\n      return throwError(errorMessage);\n    }\n    switch (errorRes.error.error.message) {\n      case 'EMAIL_EXISTS':\n        errorMessage = 'This email exists already';\n        break;\n      case 'EMAIL_NOT_FOUND':\n        errorMessage = 'This email does not exist';\n        break;\n      case 'INVALID_PASSWORD':\n        errorMessage = 'This password is not correct';\n        break;\n    }\n    return throwError(errorMessage);\n  }\n}\n","export class User {\n  constructor(\n    public email: string,\n    public id: string,\n    private _token: string,\n    private _tokenExpirationDate: Date\n  ) {}\n\n  get token() {\n    if(!this._tokenExpirationDate || new Date() > this._tokenExpirationDate){\n      return null;\n    }\n    return this._token\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DataStorageService } from '../shared/data-storage.service';\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  isAuthenticated = false;\n  private userSub: Subscription;\n\n  constructor(private dataStorageService: DataStorageService, private authService: AuthService){}\n\n  ngOnInit(){\n    this.userSub = this.authService.user.subscribe(user => {\n      this.isAuthenticated = !!user;\n      console.log(!user);\n      console.log(!!user);\n    });\n  }\n\n  onSaveData(){\n    this.dataStorageService.storeRecipes();\n  }\n\n  onFetchData(){\n    this.dataStorageService.fetchRecipes().subscribe();\n  }\n\n  onLogout(){\n    this.authService.logout();\n  }\n\n  ngOnDestroy(){\n    this.userSub.unsubscribe();\n  }\n}","<nav class=\"navbar navbar-default\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <a href=\"#\" class=\"navbar-brand\">Recipe Book</a>\n    </div>\n\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"nav navbar-nav\">\n        <li routerLinkActive=\"active\" *ngIf=\"isAuthenticated\"><a routerLink=\"/recipes\">Recipe</a></li>\n        <li routerLinkActive=\"active\" *ngIf=\"!isAuthenticated\"><a routerLink=\"/auth\">Authenticate</a></li>\n        <li routerLinkActive=\"active\"><a routerLink=\"/shopping-list\">Shopping List</a></li>\n      </ul>\n      <ul class=\"nav navbar-nav navbar-right\">\n        <li>\n          <a style=\"cursor: pointer;\" *ngIf=\"isAuthenticated\" (click)=\"onLogout()\">Logout</a>\n        </li>\n        <li class=\"dropdown\" appDropdown *ngIf=\"isAuthenticated\">\n          <a style=\"cursor: pointer;\" class=\"dropdown-toggle\" role=\"button\">Manage <span class=\"caret\"></span></a>\n          <ul class=\"dropdown-menu\">\n            <li><a style=\"cursor: pointer;\" (click)=\"onSaveData()\">Save Data</a></li>\n            <li><a style=\"cursor: pointer;\" (click)=\"onFetchData()\">Fetch Data</a></li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n  recipe: Recipe;\n  id: number;\n\n  constructor(private recipeService: RecipeService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params:  Params) => {\n        this.id = +params['id'];\n        this.recipe = this.recipeService.getRecipe(this.id);\n      }\n    );\n  }\n\n  onAddToShoppingList(){\n    this.recipeService.addIngredientsToShoppingList(this.recipe.ingredients);\n  }\n\n  onEditRecipe(){\n    this.router.navigate(['edit'], {relativeTo: this.route});\n    // this.router.navigate(['../', this.id, 'edit'], {relativeTo: this.route});\n  }\n\n  onDeleteRecipe() {\n    this.recipeService.deleteRecipe(this.id);\n    this.router.navigate(['/recipes']);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <img [src]=\"recipe.imagePath\" alt=\"{{ recipe.name }}\" class=\"img-responsive\" style=\"max-height: 200px\"/>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <h1>{{ recipe.name }}</h1>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <div class=\"btn-group\" appDropdown>\n      <button type=\"button\" class=\"btn btn-primary dropdown-toggle\">\n        Manage Recipe <span class=\"caret\"></span>\n      </button>\n      <ul class=\"dropdown-menu\">\n        <li><a (click)=\"onAddToShoppingList()\" style=\"cursor: pointer;\">To Shopping List</a></li>\n        <li><a style=\"cursor: pointer;\" (click)=\"onEditRecipe()\">Edit Recipe</a></li>\n        <li><a style=\"cursor: pointer;\" (click)=\"onDeleteRecipe()\">Delete Recipe</a></li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    {{ recipe.description }}\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\" *ngFor=\"let ingredient of recipe.ingredients\">\n        {{ ingredient.name }} - {{ ingredient.amount}}\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css'],\n})\nexport class RecipeEditComponent implements OnInit {\n  id: number;\n  editMode = false;\n  recipeForm: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private recipeService: RecipeService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id'];\n      this.editMode = params['id'] != null;\n      this.initForm();\n    });\n  }\n\n  onSubmit() {\n    // const newRecipe = new Recipe(\n    //   this.recipeForm.value['name'],\n    //   this.recipeForm.value['description'],\n    //   this.recipeForm.value['imagePath'],\n    //   this.recipeForm.value['ingredients']\n    // );\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    } else {\n      this.recipeService.addRecipe(this.recipeForm.value);\n    }\n    this.onCancel();\n  }\n\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        name: new FormControl(null, Validators.required),\n        amount: new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/),\n        ]),\n      })\n    );\n  }\n\n  onDeleteIngredient(index: number) {\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n  }\n\n  onCancel() {\n    this.router.navigate(['../'], {relativeTo: this.route});\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeImagePath = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if (recipe['ingredients']) {\n        for (let ingredient of recipe.ingredients) {\n          recipeIngredients.push(\n            new FormGroup({\n              name: new FormControl(ingredient.name, Validators.required),\n              amount: new FormControl(ingredient.amount, [\n                Validators.required,\n                Validators.pattern(/^[1-9]+[0-9]*$/),\n              ]),\n            })\n          );\n        }\n      }\n    }\n\n    this.recipeForm = new FormGroup({\n      name: new FormControl(recipeName, Validators.required),\n      imagePath: new FormControl(recipeImagePath, Validators.required),\n      description: new FormControl(recipeDescription, Validators.required),\n      ingredients: recipeIngredients,\n    });\n  }\n\n  get controls() {\n    return (<FormArray>this.recipeForm.get('ingredients')).controls;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!recipeForm.valid\">Save</button>\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              formControlName=\"name\"\n              class=\"form-control\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"imagePath\">Image URL</label>\n            <input\n              type=\"text\"\n              id=\"imagePath\"\n              formControlName=\"imagePath\"\n              class=\"form-control\"\n              formControlName=\"imagePath\"\n              #imagePath\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <img [src]=\"imagePath.value\" class=\"image-responsiive\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"description\">Description</label>\n            <textarea\n              type=\"text\"\n              id=\"description\"\n              class=\"form-control\"\n              formControlName=\"description\"\n              rows=\"6\"\n            ></textarea>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\" formArrayName=\"ingredients\">\n          <div\n            class=\"row\"\n            *ngFor=\"let ingredientCtrl of controls; let i = index\"\n            [formGroupName]=\"i\"\n            style=\"margin-top: 10px;\"\n          >\n            <div class=\"col-xs-8\">\n              <input type=\"text\" class=\"form-control\" formControlName=\"name\" />\n            </div>\n            <div class=\"col-xs-2\">\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                formControlName=\"amount\"\n              />\n            </div>\n            <div class=\"col-xs-2\">\n              <button type=\"button\" class=\"btn btn-danger\" (click)=\"onDeleteIngredient(i)\">X</button>\n            </div>\n          </div>\n          <hr>\n          <div class=\"row\">\n            <div class=\"col-xs-12\">\n              <button type=\"button\" class=\"btn btn-success\" (click)='onAddIngredient()'>Add Ingredient</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Recipe } from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe: Recipe;\n  @Input() index: number;\n\n  ngOnInit(): void {\n  }\n}\n","<a style=\"cursor: pointer;\" [routerLink]=\"[index]\" routerLinkActive=\"active\" class=\"list-group-item clearfix\">\n  <div class=\"pull-left\">\n    <h4 class=\"list-group-item-heading\">{{ recipe.name }}</h4>\n    <p class=\"list-group-item-text\">{{ recipe.description }}</p>\n  </div>\n  <span class=\"pull-right\">\n    <img\n      [src]=\"recipe.imagePath\"\n      alt=\"{{ recipe.name }}\"\n      class=\"img-responsive\"\n      style=\"max-height: 50px;\"\n    />\n  </span>\n</a>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n  recipes: Recipe[];\n  subscription: Subscription;\n\n  constructor(private recipeService: RecipeService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.subscription = this.recipeService.recipesChanged.subscribe(\n      (recipes: Recipe[]) => {\n        this.recipes = recipes;\n      }\n    );\n    this.recipes = this.recipeService.getRecipes();\n  }\n\n  onNewRecipe(){\n    this.router.navigate(['new'], {relativeTo: this.route});\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <button class=\"btn btn-success\" (click)=\"onNewRecipe()\">New Recipe</button>\n  </div>\n</div>\n<hr />\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <app-recipe-item\n      *ngFor=\"let recipeEl of recipes; let i = index\"\n      [recipe]=\"recipeEl\"\n      [index]=\"i\"\n    ></app-recipe-item>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Please select a Recipe!</h3>","import { Injectable } from '@angular/core';\nimport { Recipe } from './recipe.model';\nimport { Ingredient } from '../shared/ingredient.model';\nimport { ShoppingListService } from '../shopping-list/shoppinglist.service';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class RecipeService {\n  recipesChanged = new Subject<Recipe[]>();\n\n  // private recipes: Recipe[] = [\n  //   new Recipe(\n  //     'Tequila Sunrise',\n  //     'An awesome alcoholic cocktail',\n  //     'https://cdn.pixabay.com/photo/2015/07/07/00/34/tequila-sunrise-833905__340.jpg',\n  //     [\n  //       new Ingredient('Lime', 1),\n  //       new Ingredient('Tequila', 2),\n  //       new Ingredient('Soda', 1),\n  //       new Ingredient('Gin', 2)\n  //     ]\n  //   ),\n  //   new Recipe(\n  //     'Cheese Burger',\n  //     'A gourmet 300g cheese burger with fries',\n  //     'https://cdn.pixabay.com/photo/2020/02/08/09/05/burger-4829526_960_720.jpg',\n  //     [\n  //       new Ingredient('Patty', 1),\n  //       new Ingredient('Cheese', 1),\n  //       new Ingredient('Fries', 15),\n  //       new Ingredient('Lettuce', 1)\n  //     ]\n  //   ),\n  // ];\n  private recipes: Recipe[] = [];\n\n  constructor(private slService: ShoppingListService) {}\n\n  setRecipes(recipes: Recipe[]){\n    this.recipes = recipes;\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  getRecipes() {\n    return this.recipes.slice();\n  }\n\n  getRecipe(index: number){\n    return this.recipes[index];\n  }\n\n  addIngredientsToShoppingList(ingredients: Ingredient[]) {\n    this.slService.addIngredients(ingredients);\n  }\n\n  addRecipe(recipe: Recipe){\n    this.recipes.push(recipe);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  updateRecipe(index: number, newRecipe: Recipe) {\n    this.recipes[index] = newRecipe;\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  deleteRecipe(index: number) {\n    this.recipes.splice(index, 1);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Recipe } from './recipe.model';\nimport { DataStorageService } from '../shared/data-storage.service';\nimport { RecipeService } from './recipe.service';\n\n@Injectable({providedIn: 'root'})\nexport class RecipeResolverService implements Resolve<Recipe[]> {\n  constructor(private dataStorageService: DataStorageService, private recipesService: RecipeService){}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n    const recipes = this.recipesService.getRecipes();\n\n    if(recipes.length === 0){\n      return this.dataStorageService.fetchRecipes();\n    } else {\n      return recipes;\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { RecipeService } from './recipe.service'; \n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-5\">\n    <app-recipe-list></app-recipe-list>\n  </div>\n  <div class=\"col-md-7\">\n   <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl:  './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent {\n  @Input() message: string;\n  @Output() close = new EventEmitter<void>();\n\n  onClose(){\n    this.close.emit();\n  }\n}","<div class=\"backdrop\" (click)=\"onClose()\"></div>\n<div class=\"alert-box\">\n  <p class=\"align-item-center\">{{ message }}</p>\n  <div class=\"alert-box-actions\">\n    <button class=\"btn btn-primary\" (click)=\"onClose()\">Close</button>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map, tap, take, exhaustMap } from 'rxjs/operators';\n\nimport { RecipeService } from '../recipes/recipe.service';\nimport { Recipe } from '../recipes/recipe.model';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class DataStorageService {\n  constructor(\n    private http: HttpClient,\n    private recipeService: RecipeService,\n    private authService: AuthService\n  ) {}\n\n  storeRecipes() {\n    const recipes = this.recipeService.getRecipes();\n    this.http\n      .put('https://shopping-recipe-e2cdb.firebaseio.com/recipes.json', recipes)\n      .subscribe((response) => {\n        console.log(response);\n      });\n  }\n\n  fetchRecipes() {\n    return this.http\n      .get<Recipe[]>(\n        'https://shopping-recipe-e2cdb.firebaseio.com/recipes.json'\n      )\n      .pipe(\n        map((recipes) => {\n          return recipes.map((recipe) => {\n            return {\n              ...recipe,\n              ingredients: recipe.ingredients ? recipe.ingredients : [],\n            };\n          });\n        }),\n        tap((recipes) => {\n          this.recipeService.setRecipes(recipes);\n        })\n      );\n  }\n}\n","import { Directive, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class DropdownDirective {\n  @HostBinding('class.open') isOpen = false;\n  \n  @HostListener('click') toggleOpen() {\n    this.isOpen = !this.isOpen;\n  }\n}","// export class Ingredient {\n//   public name: string;\n//   public amount: number;\n\n//   constructor(name: string,  amount: number){\n//     this.name = name;\n//     this.amount = amount;\n\n//   }\n// }\n\n// Above is so common TS gives us the option below\n\nexport class Ingredient {\n  constructor(public name: string, public amount: number){\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  template: '<div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>',\n  styleUrls: ['./loading-spinner.component.css']\n})\nexport class LoadingSpinnerComponent{\n\n}","import { Component, OnInit, OnDestroy, ViewChild} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { Ingredient } from 'src/app/shared/ingredient.model';\nimport { ShoppingListService } from '../shoppinglist.service';\n\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css']\n})\nexport class ShoppingEditComponent implements OnInit, OnDestroy {\n  @ViewChild('f', {static: false}) slForm: NgForm;\n  subscription: Subscription;\n  editMode = false;\n  editedItemIndex : number;\n  editedItem: Ingredient;\n\n  constructor(private slService: ShoppingListService) { }\n\n  ngOnInit(): void {\n    this.subscription = this.slService.startedEditing.subscribe(\n      (index: number) => {\n        this.editedItemIndex = index;\n        this.editMode = true;\n        this.editedItem = this.slService.getIngredient(index);\n        this.slForm.setValue({\n          name: this.editedItem.name,\n          amount: this.editedItem.amount\n        })\n      }\n    );\n  }\n\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newIngredient = new Ingredient(value.name, value.amount);\n    if(this.editMode) {\n      this.slService.updateIngredient(this.editedItemIndex, newIngredient);\n    } else {\n      this.slService.addIngredient(newIngredient);\n    }\n    this.editMode = false;\n    form.reset();\n  }\n\n  onClear() {\n    this.slForm.reset();\n    this.editMode = false;\n  }\n\n  onDelete(){\n    this.slService.deleteIngredient(this.editedItemIndex);\n    this.onClear();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-5 form-group\">\n          <label for=\"name\">Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            class=\"form-control\"\n            name=\"name\"\n            ngModel\n            required\n          />\n        </div>\n        <div class=\"col-sm-2 form-group\">\n          <label for=\"amount\">Amount</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            class=\"form-control\"\n            name=\"amount\"\n            ngModel\n            required\n            pattern=\"^[1-9]+[0-9]*$\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!f.valid\">{{ editMode ? 'Update' : 'Add' }}</button>\n          <button class=\"btn btn-danger\" type=\"button\" (click)=\"onDelete()\" *ngIf=\"editMode\">Delete</button>\n          <button class=\"btn btn-primary\" type=\"button\" (click)=\"onClear()\">Clear</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Ingredient } from '../shared/ingredient.model';\nimport { ShoppingListService } from './shoppinglist.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css']\n})\nexport class ShoppingListComponent implements OnInit, OnDestroy {\n  ingredients: Ingredient[];\n  private subscription: Subscription;\n\n  constructor(private slService: ShoppingListService) { }\n\n  ngOnInit(): void {\n    this.ingredients = this.slService.getIngredients();\n    this.subscription = this.slService.ingredientsChanged.subscribe((ingredients: Ingredient[]) => {\n      this.ingredients = ingredients;\n    });\n  }\n\n  onEditItem(index: number) {\n    this.slService.startedEditing.next(index);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-10\">\n    <app-shopping-edit></app-shopping-edit>\n    <hr />\n    <ul class=\"list-group\">\n      <a \n      class=\"list-group-item\" \n      style=\"cursor: pointer;\"\n      *ngFor=\"let ingredient of ingredients; let i = index\"\n      (click)=\"onEditItem(i)\"\n      >\n      {{ ingredient.name }} ({{ ingredient.amount }})\n      </a>\n    </ul>\n  </div>\n</div>\n","import { Subject } from 'rxjs';\nimport { Ingredient } from '../shared/ingredient.model';\n\nexport class ShoppingListService {\n  ingredientsChanged = new Subject<Ingredient[]>();\n  startedEditing = new Subject<number>();\n  private ingredients: Ingredient[] = [\n    new Ingredient('Apples', 5),\n    new Ingredient('Tomatoes', 10),\n  ];\n\n  getIngredients() {\n    return this.ingredients.slice();\n  }\n\n  getIngredient(index: number) {\n    return this.ingredients[index];\n  }\n\n  addIngredient(ingredient: Ingredient) {\n    this.ingredients.push(ingredient);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  addIngredients(ingredients: Ingredient[]){\n    this.ingredients.push(...ingredients);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  updateIngredient(index: number, newIngredient: Ingredient) {\n    this.ingredients[index] = newIngredient;\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  deleteIngredient(index: number) {\n    this.ingredients.splice(index, 1);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}